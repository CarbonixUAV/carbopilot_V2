name: Carbonix Build

on:
    push:
      branches:
        - CxPilot
        - CxPilot-*
        - master
      paths-ignore:
        # remove non chibios HAL
        - 'libraries/AP_HAL_Linux/**'
        - 'libraries/AP_HAL_ESP32/**'
        - 'libraries/AP_HAL_SITL/**'
        # remove non stm directories
        - 'Tools/CHDK-Script/**'
        - 'Tools/CodeStyle/**'
        - 'Tools/completion/**'
        - 'Tools/debug/**'
        - 'Tools/environment_install/**'
        - 'Tools/FilterTestTool/**'
        - 'Tools/Frame_params/**'
        - 'Tools/geotag/**'
        - 'Tools/GIT_Test/**'
        - 'Tools/gittools/**'
        - 'Tools/Hello/**'
        - 'Tools/LogAnalyzer/**'
        - 'Tools/mavproxy_modules/**'
        - 'Tools/Pozyx/**'
        - 'Tools/PrintVersion.py'
        - 'Tools/Replay/**'
        - 'Tools/simulink/**'
        - 'Tools/UDP_Proxy/**'
        - 'Tools/vagrant/**'
        - 'Tools/Vicon/**'
        # Remove vehicles autotest we need support of test_build_option.py in the Tools/autotest directory
        - 'Tools/autotest/antennatracker.py'
        - 'Tools/autotest/arduplane.py'
        - 'Tools/autotest/ardusub.py'
        - 'Tools/autotest/balancebot.py'
        - 'Tools/autotest/location.txt'
        - 'Tools/autotest/quadplane.py'
        - 'Tools/autotest/rover.py'
        - 'Tools/autotest/sailboat.py'
        - 'Tools/autotest/swarminit.txt'
        # Remove markdown files as irrelevant
        - '**.md'
        # Remove dotfile at root directory
        - './.dir-locals.el'
        - './.dockerignore'
        - './.editorconfig'
        - './.flake8'
        - './.gitattributes'
        - './.github'
        - './.gitignore'
        - './.pre-commit-config.yaml'
        - './.pydevproject'
        - './.valgrind-suppressions'
        - './.valgrindrc'
        - 'Dockerfile'
        - 'Vagrantfile'
        - 'Makefile'
        # Remove some directories check
        - '.vscode/**'
        - '.github/ISSUE_TEMPLATE/**'
  
    pull_request:
      paths-ignore:
        # remove non chibios HAL
        - 'libraries/AP_HAL_Linux/**'
        - 'libraries/AP_HAL_ESP32/**'
        - 'libraries/AP_HAL_SITL/**'
        # remove non stm directories
        - 'Tools/CHDK-Script/**'
        - 'Tools/CodeStyle/**'
        - 'Tools/completion/**'
        - 'Tools/debug/**'
        - 'Tools/environment_install/**'
        - 'Tools/FilterTestTool/**'
        - 'Tools/Frame_params/**'
        - 'Tools/geotag/**'
        - 'Tools/GIT_Test/**'
        - 'Tools/gittools/**'
        - 'Tools/Hello/**'
        - 'Tools/LogAnalyzer/**'
        - 'Tools/mavproxy_modules/**'
        - 'Tools/Pozyx/**'
        - 'Tools/PrintVersion.py'
        - 'Tools/Replay/**'
        - 'Tools/simulink/**'
        - 'Tools/UDP_Proxy/**'
        - 'Tools/vagrant/**'
        - 'Tools/Vicon/**'
        # Remove vehicles autotest we need support of test_build_option.py in the Tools/autotest directory
        - 'Tools/autotest/antennatracker.py'
        - 'Tools/autotest/arduplane.py'
        - 'Tools/autotest/ardusub.py'
        - 'Tools/autotest/autotest.py'
        - 'Tools/autotest/balancebot.py'
        - 'Tools/autotest/common.py'
        - 'Tools/autotest/examples.py'
        - 'Tools/autotest/quadplane.py'
        - 'Tools/autotest/rover.py'
        - 'Tools/autotest/sailboat.py'
        - 'Tools/autotest/**.txt'
        - 'Tools/autotest/logger_metadata/**'
        - 'Tools/autotest/param_metadata/**'
        # Remove markdown files as irrelevant
        - '**.md'
        # Remove dotfile at root directory
        - './.dir-locals.el'
        - './.dockerignore'
        - './.editorconfig'
        - './.flake8'
        - './.gitattributes'
        - './.github'
        - './.gitignore'
        - './.pre-commit-config.yaml'
        - './.pydevproject'
        - './.valgrind-suppressions'
        - './.valgrindrc'
        - 'Dockerfile'
        - 'Vagrantfile'
        - 'Makefile'
        # Remove some directories check
        - '.vscode/**'
        - '.github/ISSUE_TEMPLATE/**'

    release:
      types: [published]
    
    workflow_dispatch:
      
concurrency:
    group: ci-${{github.workflow}}-${{ github.ref }}
    cancel-in-progress: true

jobs:
  setup-s3-path:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Extract firmware version, commit id, and branch name
        id: extract_info
        run: |
          FIRMWARE_VERSION=$(grep -oP 'define AP_CUSTOM_FIRMWARE_STRING "\K(.*)(?=")' libraries/AP_HAL_ChibiOS/hwdef/CarbonixCommon/version.inc)
          COMMIT_ID=$(git rev-parse --short HEAD)
          BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})
          echo "firmware_version=$FIRMWARE_VERSION" >> $GITHUB_ENV
          echo "commit_id=$COMMIT_ID" >> $GITHUB_ENV
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_ENV
        shell: sh -e {0}

      - name: Set S3 Path
        run: |
          DATE_HR=$(date +%Y%m%d_%H%M)
          PATH_TO_S3 = "NA"
          if [[ "${{ github.event_name }}" == 'release' ]]; then
            PATH_TO_S3="s3://carbonix-firmware-release-files/Carbopilot_V2/${DATE_HR}_${{ env.firmware_version }}_${{ env.commit_id }}/"
          elif [[ "${{ github.event_name }}" == 'push' && "${{ env.branch_name }}" == CxPilot* ]]; then
            PATH_TO_S3="s3://carbonix-firmware-dev-files/Carbopilot_V2/${{ env.branch_name }}/${DATE_HR}_${{ env.firmware_version }}_${{ env.commit_id }}/"
          elif [[ "${{ github.event_name }}" == 'pull_request' ]]; then
            PATH_TO_S3="s3://carbonix-firmware-dev-files/Carbopilot_V2/PR/${DATE_HR}_${{ env.firmware_version }}_${{ env.commit_id }}_${{ github.event.pull_request.number }}/"
          fi
          echo "PATH_TO_S3=$PATH_TO_S3" >> $GITHUB_ENV
        shell: sh -e {0}
  check_env_variable:
    runs-on: ubuntu-latest
    needs: setup-s3-path
    steps:
      - name: Check and Print PATH_TO_S3
        run: |
          if [ -z "$PATH_TO_S3" ]; then
            echo "PATH_TO_S3 is not set"
            exit 1
          else
            echo "PATH_TO_S3 is set to $PATH_TO_S3"
          fi
        shell: sh -e {0}
